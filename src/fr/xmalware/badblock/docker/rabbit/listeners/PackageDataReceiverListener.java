package fr.xmalware.badblock.docker.rabbit.listeners;

import java.lang.reflect.Type;
import java.util.Map;

import com.google.gson.reflect.TypeToken;

import fr.badblock.api.common.tech.rabbitmq.RabbitService;
import fr.badblock.api.common.tech.rabbitmq.listener.RabbitListener;
import fr.badblock.api.common.tech.rabbitmq.listener.RabbitListenerType;
import fr.badblock.api.common.utils.logs.LogType;
import fr.xmalware.badblock.docker.dockers.Docker;
import fr.xmalware.badblock.docker.rabbit.RabbitLogger;
import fr.xmalware.badblock.docker.sharing.Sharing;

public class PackageDataReceiverListener extends RabbitListener
{

	public static final Type dataType = new TypeToken<Map<String, Long>>() {}.getType();

	public PackageDataReceiverListener(RabbitService rabbitService, String name, RabbitListenerType type, boolean debug)
	{
		super(rabbitService, name, type, debug);
	}

	@Override
	public void onPacketReceiving(String body)
	{
		RabbitLogger.sendDockerLog(LogType.INFO, "[UPDATE] Received reply (" + body.length() + " bytes)...");
		Sharing.data = Docker.getInstance().getGson().fromJson(body, dataType);
		Sharing.ok = true;
		
		if (!Sharing.updating)
		{
			Sharing.run(Docker.getInstance().getConfig(), Sharing.data, false);
		}
	}

}
