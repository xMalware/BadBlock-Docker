package fr.xmalware.badblock.docker.rabbit;

import fr.badblock.api.common.minecraft.DockerRabbitQueues;
import fr.badblock.api.common.minecraft.matchmaking.MatchmakingQueues;
import fr.badblock.api.common.tech.rabbitmq.packet.RabbitPacket;
import fr.badblock.api.common.tech.rabbitmq.packet.RabbitPacketEncoder;
import fr.badblock.api.common.tech.rabbitmq.packet.RabbitPacketMessage;
import fr.badblock.api.common.tech.rabbitmq.packet.RabbitPacketType;
import fr.badblock.api.common.utils.logs.Log;
import fr.badblock.api.common.utils.logs.LogType;
import fr.xmalware.badblock.docker.dockers.Docker;

public class RabbitLogger
{

	public static void sendDockerLog(LogType logType, String string)
	{
		String log = Log.log(logType, string);
		RabbitPacketMessage rabbitPacketMessage = new RabbitPacketMessage(-1, log);
		RabbitPacket rabbitPacket = new RabbitPacket(rabbitPacketMessage,
				DockerRabbitQueues.LOG.getQueue() + "_" + Docker.getInstance().getIdCard().getFullId(),
				false,
				RabbitPacketEncoder.UTF8,
				RabbitPacketType.MESSAGE_BROKER);
		Docker.getInstance().getRabbit().sendPacket(rabbitPacket);
	}
	
	public static void sendMatchmakingLog(LogType logType, String string)
	{
		String log = Log.log(logType, string);
		RabbitPacketMessage rabbitPacketMessage = new RabbitPacketMessage(-1, log);
		RabbitPacket rabbitPacket = new RabbitPacket(rabbitPacketMessage,
				MatchmakingQueues.LOG.getQueue() + "_" + Docker.getInstance().getIdCard().getCluster(),
				false,
				RabbitPacketEncoder.UTF8,
				RabbitPacketType.MESSAGE_BROKER);
		Docker.getInstance().getRabbit().sendPacket(rabbitPacket);
	}
	
}
