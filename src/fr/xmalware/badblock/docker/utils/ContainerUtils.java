package fr.xmalware.badblock.docker.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class ContainerUtils
{

	public static boolean deleteDirectory(File dir) {
		if (!dir.exists() || !dir.isDirectory()) {
			return false;
		}

		String[] files = dir.list();
		for (int i = 0, len = files.length; i < len; i++) {
			File f = new File(dir, files[i]);
			if (f.isDirectory()) {
				deleteDirectory(f);
			} else {
				f.delete();
			}
		}
		return dir.delete();
	}

	public static void copy(File sourceLocation, File targetLocation) throws IOException {
		try {
			if (sourceLocation.isDirectory()) {
				copyFolder(sourceLocation, targetLocation);
			} else {
				copyFile(sourceLocation, targetLocation);
			}
		}catch(Exception error) {
			error.printStackTrace();
		}
	}

	public static void copyFolder(File source, File target) {
		try {
			if (!target.exists()) {
				target.mkdir();
			}

			if (source.list() == null) return;
			for (String f : source.list()) {
				copy(new File(source, f), new File(target, f));
			}
		}catch(Exception error) {
			error.printStackTrace();
		}
	}

	public static void copyFile(File source, File target) throws IOException {        
		try (
				InputStream in = new FileInputStream(source);
				OutputStream out = new FileOutputStream(target)
				) {
			byte[] buf = new byte[1024];
			int length;
			while ((length = in.read(buf)) > 0) {
				out.write(buf, 0, length);
			}
		}
	}
	
}